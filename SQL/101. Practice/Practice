--Return all the product
-- name
-- unit price
-- new price (unit price * 1.1)

SELECT name, unit_price, unit_price * 1.1 AS new_price
FROM products

-- Get the orders placed this year
SELECT *
FROM orders
WHERE order_date >= '2019-01-01'

-- From the order_items table, get the items
-- for order #6, the total price is greater than 30
SELECT *
FROM order_items
WHERE order_id = 6 AND (quantity * unit_price > 30)

-- Return products with quantity in stock equal to 49,38,72
SELECT * 
FROM products
WHERE quantity_in_stock IN (49, 38, 72)

-- Return customers born between 01/01/1990 and 01/01/2000
SELECT * 
FROM customers
WHERE birth_date BETWEEN '1990-01-01' AND '2000-01-01'

--Get the customers whose addresses contain TRAIL or AVENUE
SELECT *
FROM customers
WHERE address LIKE '%trail%'
        OR address LIKE '%AVENUE%'

--Get phone numbers end with 9 
SELECT *
FROM customers
WHERE phone LIKE '%9'

-- REGEXP similar as LIKE 
1. ^ beginning
2. $ end
3. | logical or
4. [abcd] matching with one of those
5. [a-f] range

-- Get the customers whose
-- first name are Elka or AMBUR
SELECT *
FROM customers
WHERE first_name REGEXP 'elka|ambur'
-- last names end with EY or ON
WHERE last_name REGEXP 'ey$|on$'
--last name start with MY or contains SE
WHERE last_name REGEXP '^my|se'
--last name contain B followed by R or U
WHERE last_name REGEXP 'b[r|u]


--Get the orders that are not shipped
SELECT *
FROM orders
WHERE shipped_date IS NULL

- Get the order_items that only order_id =2 and sorted by total price
SELECT order_id, product_id, quantity, unit_price
FROM order_items
WHERE order_id = 2 
ORDER BY 3*4 

-- Get the top three loyal customers(loyal = having bigger points)
SELECT *
FROM customers
ORDER BY points DESC
LIMIT 3
